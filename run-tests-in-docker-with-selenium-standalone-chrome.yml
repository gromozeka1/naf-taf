# ATTENTION
# Before running to be sure that BrowserType in appsetting.json is Chrome/Chromium, because Selenium Grid supports only Chromium based browsers for Playwright

# Running UI and API tests in separate docker containers
# To execute this docker-compose yml file use `docker compose -f run-tests-in-docker-with-selenium-standalone-chrome.yml up`
# Add the `-d` flag at the end for detached execution
# To stop the execution, hit Ctrl+C, and then `docker compose -f run-tests-in-docker-with-selenium-standalone-chrome.yml down`

version: '3'
services:    
  ui_tests:
    image: ui_tests
    container_name: ui_tests
    build:
      context: .
      dockerfile: ./UI.Tests/Dockerfile
    environment: 
      - SELENIUM_REMOTE_URL=http://chrome:4444
    depends_on:
      chrome:
        condition: service_healthy
    command: dotnet test --no-build
    volumes:
      - C:\Reports\RunTestsInDockerWithSeleniumStandalone\UI:/project/UI.Tests/Report
    
  chrome:
    image: selenium/standalone-chrome
    shm_size: 2g
    environment: 
      - SE_NODE_GRID_URL=http://localhost:4444
      - SE_NODE_MAX_SESSIONS=4
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
    ports:
      - 4444:4444
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4444/wd/hub/status"]
      interval: 1s
      timeout: 10s
      retries: 10

  chrome_video:
    image: selenium/video
    volumes:
      - C:\Reports\RunTestsInDockerWithSeleniumStandalone\Videos:/videos
    depends_on:
      - chrome
    environment:
      - DISPLAY_CONTAINER_NAME=chrome
      - FILE_NAME=chrome_video.mp4